name: CI - Tests

on:
  push:
    branches: [main]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: task_test
          POSTGRES_USER: task
          POSTGRES_PASSWORD: task
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: ./backend
      run: go mod download

    - name: Run tests
      working-directory: ./backend
      env:
        DB_URL: postgres://task:task@localhost:5432/task_test?sslmode=disable
        JWT_SECRET: test_secret
        XOR_KEY: test_key
      run: go test -v ./...

  # test-frontend:
  #   name: Test Frontend
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20'
  #       cache: 'npm'
  #       cache-dependency-path: frontend/package-lock.json

  #   - name: Install dependencies
  #     working-directory: ./frontend
  #     run: npm ci

  #   - name: Run linting
  #     working-directory: ./frontend
  #     run: npm run lint

  #   - name: Run type checking
  #     working-directory: ./frontend
  #     run: npx tsc --noEmit

  #   - name: Build application
  #     working-directory: ./frontend
  #     run: npm run build